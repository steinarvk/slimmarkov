# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: slimmarkov/proto/slimmarkov.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)




DESCRIPTOR = _descriptor.FileDescriptor(
  name='slimmarkov/proto/slimmarkov.proto',
  package='slimmarkov',
  serialized_pb='\n!slimmarkov/proto/slimmarkov.proto\x12\nslimmarkov\"\x95\x01\n\x06Header\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x12\n\nstate_size\x18\x02 \x01(\x05\x12\x15\n\rtimestamp_utc\x18\x03 \x01(\t\x12\x11\n\tdata_sha1\x18\x04 \x01(\t\x12\x13\n\x0b\x64\x61ta_length\x18\x05 \x01(\x03\x12\x12\n\nmodel_repr\x18\x06 \x01(\t\x12\x13\n\x0bmodel_class\x18\x07 \x01(\t\"J\n\x0bSymbolEntry\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\x12\n\n\x02id\x18\x02 \x01(\x03\x12\x11\n\tfrequency\x18\x03 \x01(\x03\x12\x0e\n\x06offset\x18\x04 \x01(\x03\"5\n\x0bSymbolTable\x12&\n\x05\x65ntry\x18\x01 \x03(\x0b\x32\x17.slimmarkov.SymbolEntry\"V\n\x0cMarkovBranch\x12\x11\n\tsymbol_id\x18\x01 \x01(\x03\x12\x19\n\x11\x63umulative_weight\x18\x02 \x01(\x03\x12\x18\n\x10next_node_offset\x18\x03 \x01(\x03\"a\n\nMarkovTree\x12\x11\n\tsymbol_id\x18\x01 \x01(\x03\x12\x14\n\x0ctotal_weight\x18\x02 \x01(\x03\x12*\n\x08\x62ranches\x18\x03 \x03(\x0b\x32\x18.slimmarkov.MarkovBranch')




_HEADER = _descriptor.Descriptor(
  name='Header',
  full_name='slimmarkov.Header',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='slimmarkov.Header.version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state_size', full_name='slimmarkov.Header.state_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp_utc', full_name='slimmarkov.Header.timestamp_utc', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_sha1', full_name='slimmarkov.Header.data_sha1', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data_length', full_name='slimmarkov.Header.data_length', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_repr', full_name='slimmarkov.Header.model_repr', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model_class', full_name='slimmarkov.Header.model_class', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=50,
  serialized_end=199,
)


_SYMBOLENTRY = _descriptor.Descriptor(
  name='SymbolEntry',
  full_name='slimmarkov.SymbolEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='slimmarkov.SymbolEntry.data', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='slimmarkov.SymbolEntry.id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='slimmarkov.SymbolEntry.frequency', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='slimmarkov.SymbolEntry.offset', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=201,
  serialized_end=275,
)


_SYMBOLTABLE = _descriptor.Descriptor(
  name='SymbolTable',
  full_name='slimmarkov.SymbolTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entry', full_name='slimmarkov.SymbolTable.entry', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=277,
  serialized_end=330,
)


_MARKOVBRANCH = _descriptor.Descriptor(
  name='MarkovBranch',
  full_name='slimmarkov.MarkovBranch',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol_id', full_name='slimmarkov.MarkovBranch.symbol_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cumulative_weight', full_name='slimmarkov.MarkovBranch.cumulative_weight', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_node_offset', full_name='slimmarkov.MarkovBranch.next_node_offset', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=332,
  serialized_end=418,
)


_MARKOVTREE = _descriptor.Descriptor(
  name='MarkovTree',
  full_name='slimmarkov.MarkovTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol_id', full_name='slimmarkov.MarkovTree.symbol_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='total_weight', full_name='slimmarkov.MarkovTree.total_weight', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='branches', full_name='slimmarkov.MarkovTree.branches', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=420,
  serialized_end=517,
)

_SYMBOLTABLE.fields_by_name['entry'].message_type = _SYMBOLENTRY
_MARKOVTREE.fields_by_name['branches'].message_type = _MARKOVBRANCH
DESCRIPTOR.message_types_by_name['Header'] = _HEADER
DESCRIPTOR.message_types_by_name['SymbolEntry'] = _SYMBOLENTRY
DESCRIPTOR.message_types_by_name['SymbolTable'] = _SYMBOLTABLE
DESCRIPTOR.message_types_by_name['MarkovBranch'] = _MARKOVBRANCH
DESCRIPTOR.message_types_by_name['MarkovTree'] = _MARKOVTREE

class Header(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HEADER

  # @@protoc_insertion_point(class_scope:slimmarkov.Header)

class SymbolEntry(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SYMBOLENTRY

  # @@protoc_insertion_point(class_scope:slimmarkov.SymbolEntry)

class SymbolTable(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _SYMBOLTABLE

  # @@protoc_insertion_point(class_scope:slimmarkov.SymbolTable)

class MarkovBranch(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MARKOVBRANCH

  # @@protoc_insertion_point(class_scope:slimmarkov.MarkovBranch)

class MarkovTree(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MARKOVTREE

  # @@protoc_insertion_point(class_scope:slimmarkov.MarkovTree)


# @@protoc_insertion_point(module_scope)
